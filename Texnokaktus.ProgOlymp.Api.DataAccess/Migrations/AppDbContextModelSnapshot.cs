// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Texnokaktus.ProgOlymp.Api.DataAccess.Context;

#nullable disable

namespace Texnokaktus.ProgOlymp.Api.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("ContestId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PersonalDataConsent")
                        .HasColumnType("bit");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Snils")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("ContestId", "UserId");

                    b.HasIndex("RegionId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Contest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("FinalStageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("PreliminaryStageId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("RegistrationFinish")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("RegistrationStart")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("FinalStageId")
                        .IsUnique()
                        .HasFilter("[FinalStageId] IS NOT NULL");

                    b.HasIndex("PreliminaryStageId")
                        .IsUnique()
                        .HasFilter("[PreliminaryStageId] IS NOT NULL");

                    b.ToTable("Contests");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.ContestStage", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ContestFinish")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ContestStart")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ContestStages");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DefaultAvatar")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Application", b =>
                {
                    b.HasOne("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Contest", "Contest")
                        .WithMany()
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Teacher", "Teacher", b1 =>
                        {
                            b1.Property<int>("ApplicationId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Patronym")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("School")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ApplicationId");

                            b1.ToTable("Applications");

                            b1.WithOwner()
                                .HasForeignKey("ApplicationId");
                        });

                    b.OwnsOne("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.ThirdPerson", "Parent", b1 =>
                        {
                            b1.Property<int>("ApplicationId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Patronym")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ApplicationId");

                            b1.ToTable("Applications");

                            b1.WithOwner()
                                .HasForeignKey("ApplicationId");
                        });

                    b.Navigation("Contest");

                    b.Navigation("Parent")
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Teacher")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Contest", b =>
                {
                    b.HasOne("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.ContestStage", "FinalStage")
                        .WithOne()
                        .HasForeignKey("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Contest", "FinalStageId");

                    b.HasOne("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.ContestStage", "PreliminaryStage")
                        .WithOne()
                        .HasForeignKey("Texnokaktus.ProgOlymp.Api.DataAccess.Entities.Contest", "PreliminaryStageId");

                    b.Navigation("FinalStage");

                    b.Navigation("PreliminaryStage");
                });
#pragma warning restore 612, 618
        }
    }
}
